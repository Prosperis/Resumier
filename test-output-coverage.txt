
> resumier@1.0.0 test
> vitest run --coverage --run


 RUN  v1.6.1 C:/Users/hello/Projects/Prosperis/Resumier
      Coverage enabled with v8

 ✓ src/lib/api/__tests__/errors.test.ts  (32 tests) 25ms
 ✓ src/lib/api/__tests__/client.test.ts  (31 tests) 58ms
 ✓ src/app/__tests__/query-client.test.ts  (22 tests) 27ms
 ✓ src/stores/__tests__/ui-store.test.ts  (18 tests) 146ms
 ✓ src/app/__tests__/theme-provider.test.tsx  (21 tests) 240ms
 ✓ src/stores/__tests__/auth-store.test.ts  (23 tests) 161ms
 ✓ src/app/__tests__/providers.test.tsx  (11 tests) 145ms
stderr | src/hooks/api/use-delete-resume.test.tsx > useDeleteResume > handles error correctly
Failed to delete resume: Error: Delete failed
    at C:\Users\hello\Projects\Prosperis\Resumier\src\hooks\api\use-delete-resume.test.tsx:100:19
    at file:///C:/Users/hello/Projects/Prosperis/Resumier/node_modules/@vitest/runner/dist/index.js:135:14
    at file:///C:/Users/hello/Projects/Prosperis/Resumier/node_modules/@vitest/runner/dist/index.js:60:26
    at runTest (file:///C:/Users/hello/Projects/Prosperis/Resumier/node_modules/@vitest/runner/dist/index.js:781:17)
    at runSuite (file:///C:/Users/hello/Projects/Prosperis/Resumier/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///C:/Users/hello/Projects/Prosperis/Resumier/node_modules/@vitest/runner/dist/index.js:909:15)
    at runFiles (file:///C:/Users/hello/Projects/Prosperis/Resumier/node_modules/@vitest/runner/dist/index.js:958:5)
    at startTests (file:///C:/Users/hello/Projects/Prosperis/Resumier/node_modules/@vitest/runner/dist/index.js:967:3)
    at file:///C:/Users/hello/Projects/Prosperis/Resumier/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7
    at withEnv (file:///C:/Users/hello/Projects/Prosperis/Resumier/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)

stderr | src/hooks/api/use-update-resume.test.tsx > useUpdateResume > handles error when update fails
Failed to update resume: Error: Update failed
    at C:\Users\hello\Projects\Prosperis\Resumier\src\hooks\api\use-update-resume.test.tsx:155:19
    at file:///C:/Users/hello/Projects/Prosperis/Resumier/node_modules/@vitest/runner/dist/index.js:135:14
    at file:///C:/Users/hello/Projects/Prosperis/Resumier/node_modules/@vitest/runner/dist/index.js:60:26
    at runTest (file:///C:/Users/hello/Projects/Prosperis/Resumier/node_modules/@vitest/runner/dist/index.js:781:17)
    at runSuite (file:///C:/Users/hello/Projects/Prosperis/Resumier/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///C:/Users/hello/Projects/Prosperis/Resumier/node_modules/@vitest/runner/dist/index.js:909:15)
    at runFiles (file:///C:/Users/hello/Projects/Prosperis/Resumier/node_modules/@vitest/runner/dist/index.js:958:5)
    at startTests (file:///C:/Users/hello/Projects/Prosperis/Resumier/node_modules/@vitest/runner/dist/index.js:967:3)
    at file:///C:/Users/hello/Projects/Prosperis/Resumier/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7
    at withEnv (file:///C:/Users/hello/Projects/Prosperis/Resumier/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)

stderr | src/hooks/api/use-update-resume.test.tsx > useUpdateResume > handles API errors correctly
Failed to update resume: Error: Update failed
    at C:\Users\hello\Projects\Prosperis\Resumier\src\hooks\api\use-update-resume.test.tsx:193:19
    at file:///C:/Users/hello/Projects/Prosperis/Resumier/node_modules/@vitest/runner/dist/index.js:135:14
    at file:///C:/Users/hello/Projects/Prosperis/Resumier/node_modules/@vitest/runner/dist/index.js:60:26
    at runTest (file:///C:/Users/hello/Projects/Prosperis/Resumier/node_modules/@vitest/runner/dist/index.js:781:17)
    at runSuite (file:///C:/Users/hello/Projects/Prosperis/Resumier/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///C:/Users/hello/Projects/Prosperis/Resumier/node_modules/@vitest/runner/dist/index.js:909:15)
    at runFiles (file:///C:/Users/hello/Projects/Prosperis/Resumier/node_modules/@vitest/runner/dist/index.js:958:5)
    at startTests (file:///C:/Users/hello/Projects/Prosperis/Resumier/node_modules/@vitest/runner/dist/index.js:967:3)
    at file:///C:/Users/hello/Projects/Prosperis/Resumier/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7
    at withEnv (file:///C:/Users/hello/Projects/Prosperis/Resumier/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)

stderr | src/hooks/api/use-delete-resume.test.tsx > useDeleteResume > handles error when deletion fails
Failed to delete resume: Error: Network error
    at C:\Users\hello\Projects\Prosperis\Resumier\src\hooks\api\use-delete-resume.test.tsx:172:19
    at file:///C:/Users/hello/Projects/Prosperis/Resumier/node_modules/@vitest/runner/dist/index.js:135:14
    at file:///C:/Users/hello/Projects/Prosperis/Resumier/node_modules/@vitest/runner/dist/index.js:60:26
    at runTest (file:///C:/Users/hello/Projects/Prosperis/Resumier/node_modules/@vitest/runner/dist/index.js:781:17)
    at runSuite (file:///C:/Users/hello/Projects/Prosperis/Resumier/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///C:/Users/hello/Projects/Prosperis/Resumier/node_modules/@vitest/runner/dist/index.js:909:15)
    at runFiles (file:///C:/Users/hello/Projects/Prosperis/Resumier/node_modules/@vitest/runner/dist/index.js:958:5)
    at startTests (file:///C:/Users/hello/Projects/Prosperis/Resumier/node_modules/@vitest/runner/dist/index.js:967:3)
    at file:///C:/Users/hello/Projects/Prosperis/Resumier/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7
    at withEnv (file:///C:/Users/hello/Projects/Prosperis/Resumier/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)

stderr | src/hooks/api/use-delete-resume.test.tsx > useDeleteResume > invalidates queries even on error
Failed to delete resume: Error: Delete failed
    at C:\Users\hello\Projects\Prosperis\Resumier\src\hooks\api\use-delete-resume.test.tsx:189:19
    at file:///C:/Users/hello/Projects/Prosperis/Resumier/node_modules/@vitest/runner/dist/index.js:135:14
    at file:///C:/Users/hello/Projects/Prosperis/Resumier/node_modules/@vitest/runner/dist/index.js:60:26
    at runTest (file:///C:/Users/hello/Projects/Prosperis/Resumier/node_modules/@vitest/runner/dist/index.js:781:17)
    at runSuite (file:///C:/Users/hello/Projects/Prosperis/Resumier/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///C:/Users/hello/Projects/Prosperis/Resumier/node_modules/@vitest/runner/dist/index.js:909:15)
    at runFiles (file:///C:/Users/hello/Projects/Prosperis/Resumier/node_modules/@vitest/runner/dist/index.js:958:5)
    at startTests (file:///C:/Users/hello/Projects/Prosperis/Resumier/node_modules/@vitest/runner/dist/index.js:967:3)
    at file:///C:/Users/hello/Projects/Prosperis/Resumier/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7
    at withEnv (file:///C:/Users/hello/Projects/Prosperis/Resumier/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:83:5)

 ✓ src/hooks/api/use-create-resume.test.tsx  (7 tests) 521ms
 ✓ src/hooks/api/use-update-resume.test.tsx  (7 tests) 593ms
 ✓ src/hooks/api/use-delete-resume.test.tsx  (8 tests) 657ms
 ✓ src/hooks/api/use-duplicate-resume.test.tsx  (10 tests) 753ms
stderr | src/components/ui/alert-dialog.test.tsx > AlertDialog > renders with open prop controlled
`AlertDialogContent` requires a description for the component to be accessible for screen reader users.

You can add a description to the `AlertDialogContent` by passing a `AlertDialogDescription` component as a child, which also benefits sighted users by adding visible context to the dialog.

Alternatively, you can use your own component as a description by assigning it an `id` and passing the same value to the `aria-describedby` prop in `AlertDialogContent`. If the description is confusing or duplicative for sighted users, you can use the `@radix-ui/react-visually-hidden` primitive as a wrapper around your description component.

For more information, see https://radix-ui.com/primitives/docs/components/alert-dialog
Warning: Missing `Description` or `aria-describedby={undefined}` for {AlertDialogContent}.

stderr | src/components/ui/alert-dialog.test.tsx > AlertDialog > renders with defaultOpen prop
`AlertDialogContent` requires a description for the component to be accessible for screen reader users.

You can add a description to the `AlertDialogContent` by passing a `AlertDialogDescription` component as a child, which also benefits sighted users by adding visible context to the dialog.

Alternatively, you can use your own component as a description by assigning it an `id` and passing the same value to the `aria-describedby` prop in `AlertDialogContent`. If the description is confusing or duplicative for sighted users, you can use the `@radix-ui/react-visually-hidden` primitive as a wrapper around your description component.

For more information, see https://radix-ui.com/primitives/docs/components/alert-dialog
Warning: Missing `Description` or `aria-describedby={undefined}` for {AlertDialogContent}.

stderr | src/components/ui/alert-dialog.test.tsx > AlertDialog > calls onOpenChange when dialog state changes
`AlertDialogContent` requires a description for the component to be accessible for screen reader users.

You can add a description to the `AlertDialogContent` by passing a `AlertDialogDescription` component as a child, which also benefits sighted users by adding visible context to the dialog.

Alternatively, you can use your own component as a description by assigning it an `id` and passing the same value to the `aria-describedby` prop in `AlertDialogContent`. If the description is confusing or duplicative for sighted users, you can use the `@radix-ui/react-visually-hidden` primitive as a wrapper around your description component.

For more information, see https://radix-ui.com/primitives/docs/components/alert-dialog
Warning: Missing `Description` or `aria-describedby={undefined}` for {AlertDialogContent}.

stderr | src/components/ui/alert-dialog.test.tsx > AlertDialogTrigger > opens dialog when clicked
`AlertDialogContent` requires a description for the component to be accessible for screen reader users.

You can add a description to the `AlertDialogContent` by passing a `AlertDialogDescription` component as a child, which also benefits sighted users by adding visible context to the dialog.

Alternatively, you can use your own component as a description by assigning it an `id` and passing the same value to the `aria-describedby` prop in `AlertDialogContent`. If the description is confusing or duplicative for sighted users, you can use the `@radix-ui/react-visually-hidden` primitive as a wrapper around your description component.

For more information, see https://radix-ui.com/primitives/docs/components/alert-dialog
Warning: Missing `Description` or `aria-describedby={undefined}` for {AlertDialogContent}.

stderr | src/components/ui/dialog.test.tsx > Dialog > renders with open prop controlled
Warning: Missing `Description` or `aria-describedby={undefined}` for {DialogContent}.

stderr | src/components/ui/dialog.test.tsx > Dialog > renders with defaultOpen prop
Warning: Missing `Description` or `aria-describedby={undefined}` for {DialogContent}.

stderr | src/components/ui/dialog.test.tsx > Dialog > calls onOpenChange when dialog state changes
Warning: Missing `Description` or `aria-describedby={undefined}` for {DialogContent}.

stderr | src/components/ui/dialog.test.tsx > DialogTrigger > opens dialog when clicked
Warning: Missing `Description` or `aria-describedby={undefined}` for {DialogContent}.

 ✓ src/hooks/use-resume-store.test.ts  (9 tests) 15ms
stderr | src/components/ui/dialog.test.tsx > DialogContent > renders content correctly
Warning: Missing `Description` or `aria-describedby={undefined}` for {DialogContent}.

stderr | src/components/ui/dialog.test.tsx > DialogContent > renders with custom className
Warning: Missing `Description` or `aria-describedby={undefined}` for {DialogContent}.

stderr | src/components/ui/dialog.test.tsx > DialogContent > has data-slot attribute
Warning: Missing `Description` or `aria-describedby={undefined}` for {DialogContent}.

stderr | src/components/ui/dialog.test.tsx > DialogContent > renders close button
Warning: Missing `Description` or `aria-describedby={undefined}` for {DialogContent}.

stderr | src/components/ui/dialog.test.tsx > DialogContent > closes dialog when close button is clicked
Warning: Missing `Description` or `aria-describedby={undefined}` for {DialogContent}.

stderr | src/components/ui/tabs.test.tsx > Tabs keyboard navigation > supports arrow key navigation
An update to ForwardRef inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

 ✓ src/stores/__tests__/theme-store.test.ts  (15 tests) 113ms
stderr | src/components/ui/tabs.test.tsx > Tabs keyboard navigation > supports Home and End keys
An update to ForwardRef inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

 ✓ src/components/ui/avatar.test.tsx  (17 tests) 230ms
stderr | file:\C:\Users\hello\Projects\Prosperis\Resumier\node_modules\@tanstack\router-devtools\src\index.tsx:1:9
[@tanstack/router-devtools] This package has moved to @tanstack/react-router-devtools. Please switch to the new package at your earliest convenience, as this package will be dropped in the next major version release.

 ✓ src/components/features/resume/forms/__tests__/certification-list.test.tsx  (27 tests) 2791ms
stderr | src/components/ui/alert-dialog.test.tsx > AlertDialogContent > renders content with overlay
`AlertDialogContent` requires a description for the component to be accessible for screen reader users.

You can add a description to the `AlertDialogContent` by passing a `AlertDialogDescription` component as a child, which also benefits sighted users by adding visible context to the dialog.

Alternatively, you can use your own component as a description by assigning it an `id` and passing the same value to the `aria-describedby` prop in `AlertDialogContent`. If the description is confusing or duplicative for sighted users, you can use the `@radix-ui/react-visually-hidden` primitive as a wrapper around your description component.

For more information, see https://radix-ui.com/primitives/docs/components/alert-dialog
Warning: Missing `Description` or `aria-describedby={undefined}` for {AlertDialogContent}.

stderr | src/components/ui/alert-dialog.test.tsx > AlertDialogContent > renders with custom className
`AlertDialogContent` requires a description for the component to be accessible for screen reader users.

You can add a description to the `AlertDialogContent` by passing a `AlertDialogDescription` component as a child, which also benefits sighted users by adding visible context to the dialog.

Alternatively, you can use your own component as a description by assigning it an `id` and passing the same value to the `aria-describedby` prop in `AlertDialogContent`. If the description is confusing or duplicative for sighted users, you can use the `@radix-ui/react-visually-hidden` primitive as a wrapper around your description component.

For more information, see https://radix-ui.com/primitives/docs/components/alert-dialog
Warning: Missing `Description` or `aria-describedby={undefined}` for {AlertDialogContent}.

stderr | src/components/ui/alert-dialog.test.tsx > AlertDialogContent > applies animation classes
`AlertDialogContent` requires a description for the component to be accessible for screen reader users.

You can add a description to the `AlertDialogContent` by passing a `AlertDialogDescription` component as a child, which also benefits sighted users by adding visible context to the dialog.

Alternatively, you can use your own component as a description by assigning it an `id` and passing the same value to the `aria-describedby` prop in `AlertDialogContent`. If the description is confusing or duplicative for sighted users, you can use the `@radix-ui/react-visually-hidden` primitive as a wrapper around your description component.

For more information, see https://radix-ui.com/primitives/docs/components/alert-dialog
Warning: Missing `Description` or `aria-describedby={undefined}` for {AlertDialogContent}.

stderr | src/components/ui/alert-dialog.test.tsx > AlertDialogHeader > renders children correctly
`AlertDialogContent` requires a description for the component to be accessible for screen reader users.

You can add a description to the `AlertDialogContent` by passing a `AlertDialogDescription` component as a child, which also benefits sighted users by adding visible context to the dialog.

Alternatively, you can use your own component as a description by assigning it an `id` and passing the same value to the `aria-describedby` prop in `AlertDialogContent`. If the description is confusing or duplicative for sighted users, you can use the `@radix-ui/react-visually-hidden` primitive as a wrapper around your description component.

For more information, see https://radix-ui.com/primitives/docs/components/alert-dialog
Warning: Missing `Description` or `aria-describedby={undefined}` for {AlertDialogContent}.

stderr | src/components/ui/alert-dialog.test.tsx > AlertDialogHeader > applies flex layout classes
`AlertDialogContent` requires a description for the component to be accessible for screen reader users.

You can add a description to the `AlertDialogContent` by passing a `AlertDialogDescription` component as a child, which also benefits sighted users by adding visible context to the dialog.

Alternatively, you can use your own component as a description by assigning it an `id` and passing the same value to the `aria-describedby` prop in `AlertDialogContent`. If the description is confusing or duplicative for sighted users, you can use the `@radix-ui/react-visually-hidden` primitive as a wrapper around your description component.

For more information, see https://radix-ui.com/primitives/docs/components/alert-dialog
Warning: Missing `Description` or `aria-describedby={undefined}` for {AlertDialogContent}.

stderr | src/components/ui/alert-dialog.test.tsx > AlertDialogHeader > renders with custom className
`AlertDialogContent` requires a description for the component to be accessible for screen reader users.

You can add a description to the `AlertDialogContent` by passing a `AlertDialogDescription` component as a child, which also benefits sighted users by adding visible context to the dialog.

Alternatively, you can use your own component as a description by assigning it an `id` and passing the same value to the `aria-describedby` prop in `AlertDialogContent`. If the description is confusing or duplicative for sighted users, you can use the `@radix-ui/react-visually-hidden` primitive as a wrapper around your description component.

For more information, see https://radix-ui.com/primitives/docs/components/alert-dialog
Warning: Missing `Description` or `aria-describedby={undefined}` for {AlertDialogContent}.

stderr | src/components/ui/alert-dialog.test.tsx > AlertDialogFooter > renders children correctly
`AlertDialogContent` requires a description for the component to be accessible for screen reader users.

You can add a description to the `AlertDialogContent` by passing a `AlertDialogDescription` component as a child, which also benefits sighted users by adding visible context to the dialog.

Alternatively, you can use your own component as a description by assigning it an `id` and passing the same value to the `aria-describedby` prop in `AlertDialogContent`. If the description is confusing or duplicative for sighted users, you can use the `@radix-ui/react-visually-hidden` primitive as a wrapper around your description component.

For more information, see https://radix-ui.com/primitives/docs/components/alert-dialog
Warning: Missing `Description` or `aria-describedby={undefined}` for {AlertDialogContent}.

stderr | src/components/ui/alert-dialog.test.tsx > AlertDialogFooter > applies flex layout classes
`AlertDialogContent` requires a description for the component to be accessible for screen reader users.

You can add a description to the `AlertDialogContent` by passing a `AlertDialogDescription` component as a child, which also benefits sighted users by adding visible context to the dialog.

Alternatively, you can use your own component as a description by assigning it an `id` and passing the same value to the `aria-describedby` prop in `AlertDialogContent`. If the description is confusing or duplicative for sighted users, you can use the `@radix-ui/react-visually-hidden` primitive as a wrapper around your description component.

For more information, see https://radix-ui.com/primitives/docs/components/alert-dialog
Warning: Missing `Description` or `aria-describedby={undefined}` for {AlertDialogContent}.

stderr | src/components/ui/alert-dialog.test.tsx > AlertDialogFooter > renders with custom className
`AlertDialogContent` requires a description for the component to be accessible for screen reader users.

You can add a description to the `AlertDialogContent` by passing a `AlertDialogDescription` component as a child, which also benefits sighted users by adding visible context to the dialog.

Alternatively, you can use your own component as a description by assigning it an `id` and passing the same value to the `aria-describedby` prop in `AlertDialogContent`. If the description is confusing or duplicative for sighted users, you can use the `@radix-ui/react-visually-hidden` primitive as a wrapper around your description component.

For more information, see https://radix-ui.com/primitives/docs/components/alert-dialog
Warning: Missing `Description` or `aria-describedby={undefined}` for {AlertDialogContent}.

stderr | src/components/ui/alert-dialog.test.tsx > AlertDialogTitle > renders title text
`AlertDialogContent` requires a description for the component to be accessible for screen reader users.

You can add a description to the `AlertDialogContent` by passing a `AlertDialogDescription` component as a child, which also benefits sighted users by adding visible context to the dialog.

Alternatively, you can use your own component as a description by assigning it an `id` and passing the same value to the `aria-describedby` prop in `AlertDialogContent`. If the description is confusing or duplicative for sighted users, you can use the `@radix-ui/react-visually-hidden` primitive as a wrapper around your description component.

For more information, see https://radix-ui.com/primitives/docs/components/alert-dialog
Warning: Missing `Description` or `aria-describedby={undefined}` for {AlertDialogContent}.

stderr | src/components/ui/alert-dialog.test.tsx > AlertDialogTitle > applies font styling classes
`AlertDialogContent` requires a description for the component to be accessible for screen reader users.

You can add a description to the `AlertDialogContent` by passing a `AlertDialogDescription` component as a child, which also benefits sighted users by adding visible context to the dialog.

Alternatively, you can use your own component as a description by assigning it an `id` and passing the same value to the `aria-describedby` prop in `AlertDialogContent`. If the description is confusing or duplicative for sighted users, you can use the `@radix-ui/react-visually-hidden` primitive as a wrapper around your description component.

For more information, see https://radix-ui.com/primitives/docs/components/alert-dialog
Warning: Missing `Description` or `aria-describedby={undefined}` for {AlertDialogContent}.

stderr | src/components/ui/alert-dialog.test.tsx > AlertDialogTitle > renders with custom className
`AlertDialogContent` requires a description for the component to be accessible for screen reader users.

You can add a description to the `AlertDialogContent` by passing a `AlertDialogDescription` component as a child, which also benefits sighted users by adding visible context to the dialog.

Alternatively, you can use your own component as a description by assigning it an `id` and passing the same value to the `aria-describedby` prop in `AlertDialogContent`. If the description is confusing or duplicative for sighted users, you can use the `@radix-ui/react-visually-hidden` primitive as a wrapper around your description component.

For more information, see https://radix-ui.com/primitives/docs/components/alert-dialog
Warning: Missing `Description` or `aria-describedby={undefined}` for {AlertDialogContent}.

stderr | src/components/ui/alert-dialog.test.tsx > AlertDialogAction > renders action button
`AlertDialogContent` requires a description for the component to be accessible for screen reader users.

You can add a description to the `AlertDialogContent` by passing a `AlertDialogDescription` component as a child, which also benefits sighted users by adding visible context to the dialog.

Alternatively, you can use your own component as a description by assigning it an `id` and passing the same value to the `aria-describedby` prop in `AlertDialogContent`. If the description is confusing or duplicative for sighted users, you can use the `@radix-ui/react-visually-hidden` primitive as a wrapper around your description component.

For more information, see https://radix-ui.com/primitives/docs/components/alert-dialog
Warning: Missing `Description` or `aria-describedby={undefined}` for {AlertDialogContent}.

stderr | src/components/ui/alert-dialog.test.tsx > AlertDialogAction > closes dialog when clicked
`AlertDialogContent` requires a description for the component to be accessible for screen reader users.

You can add a description to the `AlertDialogContent` by passing a `AlertDialogDescription` component as a child, which also benefits sighted users by adding visible context to the dialog.

Alternatively, you can use your own component as a description by assigning it an `id` and passing the same value to the `aria-describedby` prop in `AlertDialogContent`. If the description is confusing or duplicative for sighted users, you can use the `@radix-ui/react-visually-hidden` primitive as a wrapper around your description component.

For more information, see https://radix-ui.com/primitives/docs/components/alert-dialog
Warning: Missing `Description` or `aria-describedby={undefined}` for {AlertDialogContent}.

 ✓ src/components/ui/tabs.test.tsx  (25 tests) 4058ms
 ✓ src/components/features/resume/forms/__tests__/experience-list.test.tsx  (30 tests) 3158ms
stderr | src/components/features/resume/sections/__tests__/basic-info-section.test.tsx > BasicInfoSection > Save Button > calls onSave when save button is clicked
Not implemented: HTMLFormElement's requestSubmit() method

stderr | src/components/ui/alert-dialog.test.tsx > AlertDialogAction > calls onClick handler
`AlertDialogContent` requires a description for the component to be accessible for screen reader users.

You can add a description to the `AlertDialogContent` by passing a `AlertDialogDescription` component as a child, which also benefits sighted users by adding visible context to the dialog.

Alternatively, you can use your own component as a description by assigning it an `id` and passing the same value to the `aria-describedby` prop in `AlertDialogContent`. If the description is confusing or duplicative for sighted users, you can use the `@radix-ui/react-visually-hidden` primitive as a wrapper around your description component.

For more information, see https://radix-ui.com/primitives/docs/components/alert-dialog
Warning: Missing `Description` or `aria-describedby={undefined}` for {AlertDialogContent}.

stderr | src/components/features/resume/sections/__tests__/basic-info-section.test.tsx > BasicInfoSection > Save Button > calls onSave when form is submitted
Not implemented: HTMLFormElement's requestSubmit() method

 ✓ src/hooks/api/use-resume.test.tsx  (6 tests) 462ms
 ✓ src/components/features/resume/sections/__tests__/basic-info-section.test.tsx  (27 tests) 3753ms
 ✓ src/components/features/resume/sections/__tests__/skills-section.test.tsx  (35 tests) 3369ms
 ✓ src/components/features/resume/forms/__tests__/education-list.test.tsx  (33 tests) 3575ms
 ✓ src/components/ui/select.test.tsx  (10 tests) 1005ms
 ✓ src/hooks/api/use-resumes.test.tsx  (5 tests) 382ms
stderr | src/components/ui/alert-dialog.test.tsx > AlertDialogAction > renders with custom className
`AlertDialogContent` requires a description for the component to be accessible for screen reader users.

You can add a description to the `AlertDialogContent` by passing a `AlertDialogDescription` component as a child, which also benefits sighted users by adding visible context to the dialog.

Alternatively, you can use your own component as a description by assigning it an `id` and passing the same value to the `aria-describedby` prop in `AlertDialogContent`. If the description is confusing or duplicative for sighted users, you can use the `@radix-ui/react-visually-hidden` primitive as a wrapper around your description component.

For more information, see https://radix-ui.com/primitives/docs/components/alert-dialog
Warning: Missing `Description` or `aria-describedby={undefined}` for {AlertDialogContent}.

stderr | src/components/ui/alert-dialog.test.tsx > AlertDialogCancel > renders cancel button
`AlertDialogContent` requires a description for the component to be accessible for screen reader users.

You can add a description to the `AlertDialogContent` by passing a `AlertDialogDescription` component as a child, which also benefits sighted users by adding visible context to the dialog.

Alternatively, you can use your own component as a description by assigning it an `id` and passing the same value to the `aria-describedby` prop in `AlertDialogContent`. If the description is confusing or duplicative for sighted users, you can use the `@radix-ui/react-visually-hidden` primitive as a wrapper around your description component.

For more information, see https://radix-ui.com/primitives/docs/components/alert-dialog
Warning: Missing `Description` or `aria-describedby={undefined}` for {AlertDialogContent}.

stderr | src/components/ui/alert-dialog.test.tsx > AlertDialogCancel > closes dialog when clicked
`AlertDialogContent` requires a description for the component to be accessible for screen reader users.

You can add a description to the `AlertDialogContent` by passing a `AlertDialogDescription` component as a child, which also benefits sighted users by adding visible context to the dialog.

Alternatively, you can use your own component as a description by assigning it an `id` and passing the same value to the `aria-describedby` prop in `AlertDialogContent`. If the description is confusing or duplicative for sighted users, you can use the `@radix-ui/react-visually-hidden` primitive as a wrapper around your description component.

For more information, see https://radix-ui.com/primitives/docs/components/alert-dialog
Warning: Missing `Description` or `aria-describedby={undefined}` for {AlertDialogContent}.

 ✓ src/components/ui/tooltip.test.tsx  (18 tests) 4122ms
 ✓ src/components/ui/textarea.test.tsx  (17 tests) 1286ms
 ✓ src/components/ui/separator.test.tsx  (11 tests) 403ms
stderr | src/components/ui/dialog.test.tsx > DialogContent > renders with overlay
Warning: Missing `Description` or `aria-describedby={undefined}` for {DialogContent}.

stderr | src/components/ui/dialog.test.tsx > DialogHeader > renders children correctly
Warning: Missing `Description` or `aria-describedby={undefined}` for {DialogContent}.

stderr | src/components/ui/dialog.test.tsx > DialogHeader > has data-slot attribute
Warning: Missing `Description` or `aria-describedby={undefined}` for {DialogContent}.

stderr | src/components/ui/dialog.test.tsx > DialogHeader > applies flex layout classes
Warning: Missing `Description` or `aria-describedby={undefined}` for {DialogContent}.

stderr | src/components/ui/dialog.test.tsx > DialogHeader > renders with custom className
Warning: Missing `Description` or `aria-describedby={undefined}` for {DialogContent}.

stderr | src/components/ui/dialog.test.tsx > DialogFooter > renders children correctly
Warning: Missing `Description` or `aria-describedby={undefined}` for {DialogContent}.

stderr | src/components/ui/dialog.test.tsx > DialogFooter > has data-slot attribute
Warning: Missing `Description` or `aria-describedby={undefined}` for {DialogContent}.

stderr | src/components/ui/dialog.test.tsx > DialogFooter > applies flex layout classes
Warning: Missing `Description` or `aria-describedby={undefined}` for {DialogContent}.

stderr | src/components/ui/dialog.test.tsx > DialogFooter > renders with custom className
Warning: Missing `Description` or `aria-describedby={undefined}` for {DialogContent}.

stderr | src/components/ui/dialog.test.tsx > DialogTitle > renders title text
Warning: Missing `Description` or `aria-describedby={undefined}` for {DialogContent}.

stderr | src/components/ui/dialog.test.tsx > DialogTitle > has data-slot attribute
Warning: Missing `Description` or `aria-describedby={undefined}` for {DialogContent}.

stderr | src/components/ui/dialog.test.tsx > DialogTitle > applies font styling classes
Warning: Missing `Description` or `aria-describedby={undefined}` for {DialogContent}.

stderr | src/components/ui/dialog.test.tsx > DialogTitle > renders with custom className
Warning: Missing `Description` or `aria-describedby={undefined}` for {DialogContent}.

stderr | src/components/ui/dialog.test.tsx > DialogClose > closes dialog when clicked
Warning: Missing `Description` or `aria-describedby={undefined}` for {DialogContent}.

stderr | src/components/ui/alert-dialog.test.tsx > AlertDialogCancel > calls onClick handler
`AlertDialogContent` requires a description for the component to be accessible for screen reader users.

You can add a description to the `AlertDialogContent` by passing a `AlertDialogDescription` component as a child, which also benefits sighted users by adding visible context to the dialog.

Alternatively, you can use your own component as a description by assigning it an `id` and passing the same value to the `aria-describedby` prop in `AlertDialogContent`. If the description is confusing or duplicative for sighted users, you can use the `@radix-ui/react-visually-hidden` primitive as a wrapper around your description component.

For more information, see https://radix-ui.com/primitives/docs/components/alert-dialog
Warning: Missing `Description` or `aria-describedby={undefined}` for {AlertDialogContent}.

stderr | src/components/ui/dialog.test.tsx > DialogClose > has data-slot attribute
Warning: Missing `Description` or `aria-describedby={undefined}` for {DialogContent}.

stderr | src/components/ui/dialog.test.tsx > DialogClose > can be a custom button
Warning: Missing `Description` or `aria-describedby={undefined}` for {DialogContent}.

stderr | src/components/ui/alert-dialog.test.tsx > AlertDialogCancel > renders with custom className
`AlertDialogContent` requires a description for the component to be accessible for screen reader users.

You can add a description to the `AlertDialogContent` by passing a `AlertDialogDescription` component as a child, which also benefits sighted users by adding visible context to the dialog.

Alternatively, you can use your own component as a description by assigning it an `id` and passing the same value to the `aria-describedby` prop in `AlertDialogContent`. If the description is confusing or duplicative for sighted users, you can use the `@radix-ui/react-visually-hidden` primitive as a wrapper around your description component.

For more information, see https://radix-ui.com/primitives/docs/components/alert-dialog
Warning: Missing `Description` or `aria-describedby={undefined}` for {AlertDialogContent}.

stderr | src/components/ui/dialog.test.tsx > Dialog accessibility > has proper role attribute
Warning: Missing `Description` or `aria-describedby={undefined}` for {DialogContent}.

stderr | src/components/ui/alert-dialog.test.tsx > AlertDialog accessibility > supports keyboard navigation
`AlertDialogContent` requires a description for the component to be accessible for screen reader users.

You can add a description to the `AlertDialogContent` by passing a `AlertDialogDescription` component as a child, which also benefits sighted users by adding visible context to the dialog.

Alternatively, you can use your own component as a description by assigning it an `id` and passing the same value to the `aria-describedby` prop in `AlertDialogContent`. If the description is confusing or duplicative for sighted users, you can use the `@radix-ui/react-visually-hidden` primitive as a wrapper around your description component.

For more information, see https://radix-ui.com/primitives/docs/components/alert-dialog
Warning: Missing `Description` or `aria-describedby={undefined}` for {AlertDialogContent}.

 ✓ src/components/ui/input.test.tsx  (16 tests) 1139ms
stderr | src/components/ui/dialog.test.tsx > Dialog accessibility > supports keyboard navigation
Warning: Missing `Description` or `aria-describedby={undefined}` for {DialogContent}.

 ✓ src/components/ui/alert-dialog.test.tsx  (31 tests) 6181ms
stderr | src/components/ui/dialog.test.tsx > Dialog accessibility > traps focus within dialog
Warning: Missing `Description` or `aria-describedby={undefined}` for {DialogContent}.

 ✓ src/components/features/resume/forms/__tests__/link-list.test.tsx  (31 tests) 5027ms
 ✓ src/components/ui/checkbox.test.tsx  (10 tests) 1372ms
 ✓ src/components/ui/dialog.test.tsx  (37 tests) 5161ms
 ✓ src/components/features/resume/mutations/__tests__/delete-resume-dialog.test.tsx  (11 tests) 5250ms
 ✓ src/hooks/use-theme.test.ts  (6 tests) 62ms
 ✓ src/app/__tests__/router.test.ts  (23 tests) 13ms
 ✓ src/components/ui/label.test.tsx  (8 tests) 298ms
stdout | src/test-mocks.test.tsx > Mock verification > window.matchMedia returns correct object
typeof window.matchMedia: function
window.matchMedia: [Function: spy] {
  getMockName: [Function (anonymous)],
  mockName: [Function (anonymous)],
  mockClear: [Function (anonymous)],
  mockReset: [Function (anonymous)],
  mockRestore: [Function (anonymous)],
  getMockImplementation: [Function (anonymous)],
  mockImplementation: [Function (anonymous)],
  mockImplementationOnce: [Function (anonymous)],
  withImplementation: [Function: withImplementation],
  mockReturnThis: [Function (anonymous)],
  mockReturnValue: [Function (anonymous)],
  mockReturnValueOnce: [Function (anonymous)],
  mockResolvedValue: [Function (anonymous)],
  mockResolvedValueOnce: [Function (anonymous)],
  mockRejectedValue: [Function (anonymous)],
  mockRejectedValueOnce: [Function (anonymous)]
}
result: {
  matches: false,
  media: '(prefers-reduced-motion)',
  onchange: null,
  addEventListener: [Function: spy] {
    getMockName: [Function (anonymous)],
    mockName: [Function (anonymous)],
    mockClear: [Function (anonymous)],
    mockReset: [Function (anonymous)],
    mockRestore: [Function (anonymous)],
    getMockImplementation: [Function (anonymous)],
    mockImplementation: [Function (anonymous)],
    mockImplementationOnce: [Function (anonymous)],
    withImplementation: [Function: withImplementation],
    mockReturnThis: [Function (anonymous)],
    mockReturnValue: [Function (anonymous)],
    mockReturnValueOnce: [Function (anonymous)],
    mockResolvedValue: [Function (anonymous)],
    mockResolvedValueOnce: [Function (anonymous)],
    mockRejectedValue: [Function (anonymous)],
    mockRejectedValueOnce: [Function (anonymous)]
  },
  removeEventListener: [Function: spy] {
    getMockName: [Function (anonymous)],
    mockName: [Function (anonymous)],
    mockClear: [Function (anonymous)],
    mockReset: [Function (anonymous)],
    mockRestore: [Function (anonymous)],
    getMockImplementation: [Function (anonymous)],
    mockImplementation: [Function (anonymous)],
    mockImplementationOnce: [Function (anonymous)],
    withImplementation: [Function: withImplementation],
    mockReturnThis: [Function (anonymous)],
    mockReturnValue: [Function (anonymous)],
    mockReturnValueOnce: [Function (anonymous)],
    mockResolvedValue: [Function (anonymous)],
    mockResolvedValueOnce: [Function (anonymous)],
    mockRejectedValue: [Function (anonymous)],
    mockRejectedValueOnce: [Function (anonymous)]
  },
  addListener: [Function: spy] {
    getMockName: [Function (anonymous)],
    mockName: [Function (anonymous)],
    mockClear: [Function (anonymous)],
    mockReset: [Function (anonymous)],
    mockRestore: [Function (anonymous)],
    getMockImplementation: [Function (anonymous)],
    mockImplementation: [Function (anonymous)],
    mockImplementationOnce: [Function (anonymous)],
    withImplementation: [Function: withImplementation],
    mockReturnThis: [Function (anonymous)],
    mockReturnValue: [Function (anonymous)],
    mockReturnValueOnce: [Function (anonymous)],
    mockResolvedValue: [Function (anonymous)],
    mockResolvedValueOnce: [Function (anonymous)],
    mockRejectedValue: [Function (anonymous)],
    mockRejectedValueOnce: [Function (anonymous)]
  },
  removeListener: [Function: spy] {
    getMockName: [Function (anonymous)],
    mockName: [Function (anonymous)],
    mockClear: [Function (anonymous)],
    mockReset: [Function (anonymous)],
    mockRestore: [Function (anonymous)],
    getMockImplementation: [Function (anonymous)],
    mockImplementation: [Function (anonymous)],
    mockImplementationOnce: [Function (anonymous)],
    withImplementation: [Function: withImplementation],
    mockReturnThis: [Function (anonymous)],
    mockReturnValue: [Function (anonymous)],
    mockReturnValueOnce: [Function (anonymous)],
    mockResolvedValue: [Function (anonymous)],
    mockResolvedValueOnce: [Function (anonymous)],
    mockRejectedValue: [Function (anonymous)],
    mockRejectedValueOnce: [Function (anonymous)]
  },
  dispatchEvent: [Function: spy] {
    getMockName: [Function (anonymous)],
    mockName: [Function (anonymous)],
    mockClear: [Function (anonymous)],
    mockReset: [Function (anonymous)],
    mockRestore: [Function (anonymous)],
    getMockImplementation: [Function (anonymous)],
    mockImplementation: [Function (anonymous)],
    mockImplementationOnce: [Function (anonymous)],
    withImplementation: [Function: withImplementation],
    mockReturnThis: [Function (anonymous)],
    mockReturnValue: [Function (anonymous)],
    mockReturnValueOnce: [Function (anonymous)],
    mockResolvedValue: [Function (anonymous)],
    mockResolvedValueOnce: [Function (anonymous)],
    mockRejectedValue: [Function (anonymous)],
    mockRejectedValueOnce: [Function (anonymous)]
  }
}

 ✓ src/components/ui/use-sidebar.test.tsx  (3 tests) 42ms
 ✓ src/test-mocks.test.tsx  (4 tests) 7ms
 ✓ src/lib/utils.test.ts  (5 tests) 23ms
 ✓ src/debug2.test.ts  (1 test) 2ms
 ✓ src/debug.test.ts  (1 test) 3ms
 ✓ src/components/ui/card.test.tsx  (7 tests) 119ms
 ✓ src/components/features/resume/mutations/__tests__/create-resume-dialog.test.tsx  (10 tests) 6916ms
 ✓ src/hooks/use-mobile.test.ts  (4 tests) 37ms
 ✓ src/components/ui/badge.test.tsx  (7 tests) 116ms
stdout | src/matcher-test.test.tsx > jest-dom matchers test > should have toBeInTheDocument matcher
expect object keys: [
  'fail',
  'extend',
  'addSnapshotSerializer',
  'anything',
  'any',
  'stringContaining',
  'objectContaining',
  'arrayContaining',
  'stringMatching',
  'closeTo',
  'not',
  'getState',
  'setState',
  'addEqualityTesters',
  'soft',
  'unreachable',
  'assertions',
  'hasAssertions',
  'toAppearAfter',
  'toAppearBefore',
  'toBeChecked',
  'toBeDisabled',
  'toBeEmpty',
  'toBeEmptyDOMElement',
  'toBeEnabled',
  'toBeInTheDOM',
  'toBeInTheDocument',
  'toBeInvalid',
  'toBePartiallyChecked',
  'toBePartiallyPressed',
  'toBePressed',
  'toBeRequired',
  'toBeValid',
  'toBeVisible',
  'toContainElement',
  'toContainHTML',
  'toHaveAccessibleDescription',
  'toHaveAccessibleErrorMessage',
  'toHaveAccessibleName',
  'toHaveAttribute',
  'toHaveClass',
  'toHaveDescription',
  'toHaveDisplayValue',
  'toHaveErrorMessage',
  'toHaveFocus',
  'toHaveFormValues',
  'toHaveRole',
  'toHaveSelection',
  'toHaveStyle',
  'toHaveTextContent',
  'toHaveValue'
]
Has toBeInTheDocument? function

 ✓ src/matcher-test.test.tsx  (1 test) 41ms
 ✓ src/components/ui/button.test.tsx  (6 tests) 82ms
 ✓ src/components/features/resume/mutations/__tests__/rename-resume-dialog.test.tsx  (14 tests) 8378ms
 ✓ src/components/features/resume/sections/__tests__/experience-section.test.tsx  (42 tests) 11580ms
 ✓ src/components/features/resume/forms/__tests__/personal-info-form.test.tsx  (47 tests) 11378ms
 ✓ src/components/features/resume/forms/__tests__/skills-form.test.tsx  (40 tests) 14161ms
 ✓ src/components/features/resume/forms/__tests__/link-form-dialog.test.tsx  (36 tests) 14295ms
 ✓ src/components/features/resume/forms/__tests__/certification-form-dialog.test.tsx  (35 tests) 17241ms
 ✓ src/components/features/resume/forms/__tests__/experience-form-dialog.test.tsx  (34 tests) 19536ms
 ✓ src/components/features/resume/forms/__tests__/education-form-dialog.test.tsx  (41 tests) 24317ms

 Test Files  54 passed (54)
      Tests  986 passed (986)
   Start at  20:08:38
   Duration  31.83s (transform 7.80s, setup 21.58s, collect 92.31s, tests 184.82s, environment 122.34s, prepare 31.50s)

 % Coverage report from v8
-------------------|---------|----------|---------|---------|-------------------
File               | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s 
-------------------|---------|----------|---------|---------|-------------------
All files          |   22.48 |    85.38 |   56.72 |   22.48 |                   
 Resumier          |       0 |        0 |       0 |       0 |                   
  ...g.compiled.js |       0 |        0 |       0 |       0 | 1-16043           
  fix-imports.cjs  |       0 |        0 |       0 |       0 | 1-60              
  vitest.setup.ts  |       0 |        0 |       0 |       0 | 1-73              
 ...s/resume/forms |       0 |        0 |       0 |       0 |                   
  ...rm-dialog.tsx |       0 |        0 |       0 |       0 | 1-255             
 .../components/ui |       0 |        0 |       0 |       0 |                   
  ...ted-badge.tsx |       0 |        0 |       0 |       0 | 1-213             
  ...-feedback.tsx |       0 |        0 |       0 |       0 | 1-311             
  ...ated-icon.tsx |       0 |        0 |       0 |       0 | 1-224             
 Resumier/src      |       0 |        0 |       0 |       0 |                   
  App.tsx          |       0 |        0 |       0 |       0 | 1-61              
  main.tsx         |       0 |        0 |       0 |       0 | 1-14              
 Resumier/src/app  |   99.41 |       95 |    92.3 |   99.41 |                   
  providers.tsx    |     100 |      100 |     100 |     100 |                   
  query-client.ts  |     100 |      100 |     100 |     100 |                   
  routeTree.gen.ts |     100 |      100 |     100 |     100 |                   
  router.ts        |     100 |      100 |     100 |     100 |                   
  ...-provider.tsx |   97.26 |     90.9 |      75 |   97.26 | 69-70             
 .../features/auth |    7.35 |      100 |       0 |    7.35 |                   
  login-form.tsx   |    7.35 |      100 |       0 |    7.35 | 11-136            
 ...res/navigation |       0 |        0 |       0 |       0 |                   
  app-header.tsx   |       0 |        0 |       0 |       0 | 1-36              
  app-sidebar.tsx  |       0 |        0 |       0 |       0 | 1-98              
  nav-main.tsx     |       0 |        0 |       0 |       0 | 1-75              
  nav-projects.tsx |       0 |        0 |       0 |       0 | 1-81              
  ...secondary.tsx |       0 |        0 |       0 |       0 | 1-40              
  nav-user.tsx     |       0 |        0 |       0 |       0 | 1-99              
  theme-toggle.tsx |       0 |        0 |       0 |       0 | 1-15              
 ...eatures/resume |    6.88 |        0 |       0 |    6.88 |                   
  ...fo-dialog.tsx |       0 |        0 |       0 |       0 | 1-300             
  pdf-viewer.tsx   |   33.33 |      100 |       0 |   33.33 | 2-3               
  ...fo-dialog.tsx |       0 |        0 |       0 |       0 | 1-327             
  ...e-builder.tsx |    4.01 |      100 |       0 |    4.01 | 29-698            
  ...dashboard.tsx |   12.82 |      100 |       0 |   12.82 | 16-117            
  ...me-editor.tsx |   30.61 |      100 |       0 |   30.61 | 16-49             
  ...e-columns.tsx |   24.85 |      100 |       0 |   24.85 | ...64-110,116-169 
  resume-table.tsx |   43.24 |      100 |       0 |   43.24 | 17-37             
 ...res/resume/dnd |      65 |       40 |   66.66 |      65 |                   
  dnd-utils.ts     |       0 |        0 |       0 |       0 | 1-35              
  drag-handle.tsx  |     100 |       50 |     100 |     100 | 18                
  ...able-item.tsx |     100 |       50 |     100 |     100 | 27                
 .../resume/export |   31.91 |      100 |       0 |   31.91 |                   
  export-menu.tsx  |   27.14 |      100 |       0 |   27.14 | 20-70             
  export-utils.ts  |   36.61 |      100 |       0 |   36.61 | ...41,46-54,60-71 
 ...s/resume/forms |   96.41 |    93.26 |   94.56 |   96.41 |                   
  ...rm-dialog.tsx |     100 |      100 |     100 |     100 |                   
  ...tion-list.tsx |   89.87 |    91.66 |      80 |   89.87 | 42-57             
  ...rm-dialog.tsx |     100 |      100 |     100 |     100 |                   
  ...tion-list.tsx |   90.18 |       95 |   83.33 |   90.18 | 37-52             
  ...rm-dialog.tsx |     100 |      100 |     100 |     100 |                   
  ...ence-list.tsx |    89.8 |      100 |   83.33 |    89.8 | 37-52             
  index.ts         |       0 |        0 |       0 |       0 | 1                 
  ...rm-dialog.tsx |     100 |      100 |     100 |     100 |                   
  link-list.tsx    |    87.5 |    89.47 |   83.33 |    87.5 | 39,54,67-82       
  ...info-form.tsx |     100 |      100 |     100 |     100 |                   
  skills-form.tsx  |     100 |    76.31 |     100 |     100 | ...30,151,170,189 
 ...sume/mutations |   98.42 |     92.1 |     100 |   98.42 |                   
  ...me-dialog.tsx |   97.94 |    85.71 |     100 |   97.94 | 122-124           
  ...me-dialog.tsx |     100 |      100 |     100 |     100 |                   
  index.ts         |     100 |      100 |     100 |     100 |                   
  ...me-dialog.tsx |   97.84 |    93.33 |     100 |   97.84 | 112-114           
 ...resume/preview |   35.13 |      100 |       0 |   35.13 |                   
  ...e-preview.tsx |   34.48 |      100 |       0 |   34.48 | 11-29             
  ...-selector.tsx |   35.55 |      100 |       0 |   35.55 | 17-45             
 ...view/templates |    5.32 |      100 |       0 |    5.32 |                   
  ...-template.tsx |    3.93 |      100 |       0 |    3.93 | 8-178             
  index.ts         |     100 |      100 |     100 |     100 |                   
  ...-template.tsx |    3.72 |      100 |       0 |    3.72 | 8-188             
  ...-template.tsx |    6.37 |      100 |       0 |    6.37 | 17-251            
 ...esume/sections |   61.16 |    90.69 |   77.77 |   61.16 |                   
  ...o-section.tsx |     100 |      100 |     100 |     100 |                   
  ...s-section.tsx |       0 |        0 |       0 |       0 | 1-50              
  ...n-section.tsx |       0 |        0 |       0 |       0 | 1-74              
  ...e-section.tsx |     100 |      100 |   83.33 |     100 |                   
  index.ts         |       0 |        0 |       0 |       0 | 1-6               
  ...s-section.tsx |       0 |        0 |       0 |       0 | 1-63              
  ...s-section.tsx |     100 |      100 |     100 |     100 |                   
 ...tures/settings |       0 |        0 |       0 |       0 |                   
  ...gs-dialog.tsx |       0 |        0 |       0 |       0 | 1-116             
 ...onents/layouts |   20.89 |      100 |       0 |   20.89 |                   
  root-layout.tsx  |   20.89 |      100 |       0 |   20.89 | 15-67             
 .../components/ui |   30.57 |    78.84 |   48.71 |   30.57 |                   
  alert-dialog.tsx |     100 |      100 |     100 |     100 |                   
  ...ted-badge.tsx |       0 |        0 |       0 |       0 | 1-213             
  ...-feedback.tsx |       0 |        0 |       0 |       0 | 1-311             
  ...ated-icon.tsx |       0 |        0 |       0 |       0 | 1-224             
  avatar.tsx       |     100 |      100 |     100 |     100 |                   
  ...e-variants.ts |     100 |      100 |     100 |     100 |                   
  badge.tsx        |     100 |    76.92 |     100 |     100 | 35-38             
  breadcrumb.tsx   |       0 |        0 |       0 |       0 | 1-102             
  ...n-variants.ts |     100 |      100 |     100 |     100 |                   
  button.tsx       |     100 |    77.77 |     100 |     100 | 39-41             
  calendar.tsx     |       0 |        0 |       0 |       0 | 1-175             
  card.tsx         |   91.08 |       80 |   85.71 |   91.08 | 77-85             
  checkbox.tsx     |     100 |      100 |     100 |     100 |                   
  collapsible.tsx  |     100 |      100 |     100 |     100 |                   
  ...mn-header.tsx |    28.2 |      100 |       0 |    28.2 | 12-39             
  ...agination.tsx |   12.82 |      100 |       0 |   12.82 | 11-78             
  ...e-toolbar.tsx |   28.88 |      100 |       0 |   28.88 | 14-45             
  ...w-options.tsx |   36.17 |      100 |       0 |   36.17 | 18-47             
  data-table.tsx   |   29.82 |      100 |       0 |   29.82 | 35-114            
  dialog.tsx       |     100 |      100 |     100 |     100 |                   
  ...down-menu.tsx |   18.69 |      100 |       0 |   18.69 | ...90-212,214-228 
  form.tsx         |    98.8 |    93.33 |     100 |    98.8 | 48-49             
  input.tsx        |     100 |    33.33 |     100 |     100 | 20-22             
  label.tsx        |     100 |      100 |     100 |     100 |                   
  ...g-spinner.tsx |   31.81 |      100 |       0 |   31.81 | ...81-123,140-176 
  progress.tsx     |       0 |        0 |       0 |       0 | 1-246             
  route-error.tsx  |   21.97 |      100 |       0 |   21.97 | 16-65,71-91       
  ...e-loading.tsx |   53.84 |      100 |       0 |   53.84 | ...33,39-40,46-52 
  select.tsx       |     100 |      100 |     100 |     100 |                   
  separator.tsx    |     100 |      100 |     100 |     100 |                   
  sheet.tsx        |       0 |        0 |       0 |       0 | 1-130             
  sidebar.tsx      |       0 |        0 |       0 |       0 | 1-673             
  skeleton.tsx     |       0 |        0 |       0 |       0 | 1-181             
  table.tsx        |   61.11 |      100 |     100 |   61.11 | ...59-67,74-79,86 
  tabs.tsx         |     100 |      100 |     100 |     100 |                   
  textarea.tsx     |     100 |    33.33 |     100 |     100 | 19-21             
  tooltip.tsx      |     100 |      100 |     100 |     100 |                   
  use-sidebar.ts   |     100 |      100 |     100 |     100 |                   
 ...ts/ui/animated |   60.05 |      100 |       0 |   60.05 |                   
  fade-in.tsx      |   60.37 |      100 |       0 |   60.37 | 33-53             
  index.ts         |     100 |      100 |     100 |     100 |                   
  ...ransition.tsx |   55.17 |      100 |       0 |   55.17 | 33-58             
  scale-in.tsx     |   54.09 |      100 |       0 |   54.09 | 34-61             
  slide-in.tsx     |   62.66 |      100 |       0 |   62.66 | 48-75             
  ...-children.tsx |   60.49 |      100 |       0 |   60.49 | 33-56,74-81       
 ...mier/src/hooks |   52.42 |    85.71 |   46.66 |   52.42 |                   
  use-auto-save.ts |   34.07 |      100 |       0 |   34.07 | 35-101,114-135    
  use-mobile.ts    |   89.47 |      100 |      50 |   89.47 | 11-12             
  ...-documents.ts |       0 |        0 |       0 |       0 | 1-25              
  ...sume-store.ts |   87.87 |    89.47 |   68.75 |   87.87 | ...42-147,160-161 
  use-theme.ts     |     100 |    83.33 |     100 |     100 | 7,10              
  use-toast.ts     |   27.87 |      100 |       0 |   27.87 | ...40-158,163-165 
 .../src/hooks/api |   93.42 |    77.77 |     100 |   93.42 |                   
  index.ts         |     100 |      100 |     100 |     100 |                   
  test-helpers.ts  |     100 |      100 |     100 |     100 |                   
  ...ate-resume.ts |   96.66 |       80 |     100 |   96.66 | 23                
  ...ete-resume.ts |      94 |       75 |     100 |      94 | 28,37-38          
  ...ate-resume.ts |   97.36 |       80 |     100 |   97.36 | 31                
  use-resume.ts    |     100 |      100 |     100 |     100 |                   
  use-resumes.ts   |     100 |      100 |     100 |     100 |                   
  ...ate-resume.ts |   81.81 |    63.63 |     100 |   81.81 | 37-39,48-56,65-66 
 Resumier/src/lib  |     100 |      100 |     100 |     100 |                   
  utils.ts         |     100 |      100 |     100 |     100 |                   
 ...lib/animations |   95.93 |        0 |       0 |   95.93 |                   
  index.ts         |       0 |        0 |       0 |       0 | 1-12              
  transitions.ts   |   94.76 |      100 |       0 |   94.76 | 176-180,187-191   
  variants.ts      |     100 |      100 |     100 |     100 |                   
 ...imations/hooks |   82.94 |    41.66 |      60 |   82.94 |                   
  index.ts         |       0 |        0 |       0 |       0 | 1-6               
  ...ced-motion.ts |   86.99 |    45.45 |      75 |   86.99 | ...,91-92,119-120 
 ...er/src/lib/api |   68.26 |    96.87 |   54.34 |   68.26 |                   
  auth.ts          |   78.87 |      100 |       0 |   78.87 | ...53,59-60,66-70 
  client.ts        |    93.4 |    96.55 |      90 |    93.4 | 170-181           
  errors.ts        |     100 |    96.87 |     100 |     100 | 130               
  mock-db.ts       |   74.32 |      100 |      25 |   74.32 | ...08-210,216-218 
  mock.ts          |   14.61 |      100 |       0 |   14.61 | ...48-163,169-218 
 ...c/lib/api/mock |       0 |        0 |       0 |       0 |                   
  db.ts            |       0 |        0 |       0 |       0 | 1-271             
  index.ts         |       0 |        0 |       0 |       0 | 1-71              
  resumes.ts       |       0 |        0 |       0 |       0 | 1-118             
 .../src/lib/types |     100 |      100 |     100 |     100 |                   
  templates.ts     |     100 |      100 |     100 |     100 |                   
 ...ib/validations |   96.29 |      100 |       0 |   96.29 |                   
  certification.ts |     100 |      100 |     100 |     100 |                   
  education.ts     |     100 |      100 |     100 |     100 |                   
  experience.ts    |   85.71 |      100 |       0 |   85.71 | 24-29             
  index.ts         |     100 |      100 |     100 |     100 |                   
  links.ts         |     100 |      100 |     100 |     100 |                   
  personal-info.ts |     100 |      100 |     100 |     100 |                   
  skills.ts        |     100 |      100 |     100 |     100 |                   
 ...ier/src/routes |   28.15 |      100 |       0 |   28.15 |                   
  __root.tsx       |      56 |      100 |       0 |      56 | 15-25             
  dashboard.tsx    |   40.42 |      100 |       0 |   40.42 | 14-22,26,30-47    
  index.tsx        |   11.76 |      100 |       0 |   11.76 | 13-102            
  login.tsx        |   31.25 |      100 |       0 |   31.25 | 13-21,25-48       
  settings.tsx     |   32.72 |      100 |       0 |   32.72 | 13-20,24,28-55    
 .../routes/resume |   30.54 |      100 |       0 |   30.54 |                   
  $id.preview.tsx  |   24.71 |      100 |       0 |   24.71 | 17-24,28,32-89    
  $id.tsx          |   31.74 |      100 |       0 |   31.74 | 15-22,26,30-63    
  new.tsx          |   39.21 |      100 |       0 |   39.21 | 15-22,26,30-51    
 ...ier/src/stores |   89.83 |    96.66 |   42.46 |   89.83 |                   
  auth-store.ts    |     100 |      100 |     100 |     100 |                   
  index.ts         |     100 |      100 |     100 |     100 |                   
  resume-store.ts  |   78.27 |       75 |    6.25 |   78.27 | ...34-238,241-244 
  theme-store.ts   |   98.43 |     92.3 |   57.14 |   98.43 | 49                
  ui-store.ts      |   92.54 |      100 |   57.14 |   92.54 | ...53-155,158-161 
 Resumier/src/test |       0 |        0 |       0 |       0 |                   
  test-utils.tsx   |       0 |        0 |       0 |       0 | 1-51              
-------------------|---------|----------|---------|---------|-------------------
ERROR: Coverage for lines (22.48%) does not meet global threshold (80%)
ERROR: Coverage for functions (56.72%) does not meet global threshold (80%)
ERROR: Coverage for statements (22.48%) does not meet global threshold (80%)
